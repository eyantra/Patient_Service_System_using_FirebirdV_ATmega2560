Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_udivmodhi4.o)
                              src/BOT_CODE/bot.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
                              src/BOT_CODE/bot.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

million             0x2               src/BOT_CODE/bot.o
temp                0x2               src/BOT_CODE/bot.o
ADC_Value           0x1               src/BOT_CODE/bot.o
i                   0x2               src/BOT_CODE/bot.o
tens                0x2               src/BOT_CODE/bot.o
hundred             0x2               src/BOT_CODE/bot.o
unit                0x2               src/BOT_CODE/bot.o
thousand            0x2               src/BOT_CODE/bot.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00100000         xr
data             0x00800200         0x0000fe00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
LOAD src/BOT_CODE/bot.o
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xa9e
 *(.vectors)
 .vectors       0x00000000       0xe4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000e4                . = ALIGN (0x2)
                0x000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000e4        0x0 linker stubs
 *(.trampolines*)
                0x000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000e4                __ctors_start = .
 *(.ctors)
                0x000000e4                __ctors_end = .
                0x000000e4                __dtors_start = .
 *(.dtors)
                0x000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000e4        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
                0x000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000e4       0x10 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000f4       0x1a /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
                0x000000f4                __do_copy_data
 .init4         0x0000010e       0x10 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
                0x0000010e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000011e        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x00000126        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
                0x00000126                __vector_38
                0x00000126                __vector_22
                0x00000126                __vector_28
                0x00000126                __vector_1
                0x00000126                __vector_32
                0x00000126                __vector_34
                0x00000126                __vector_24
                0x00000126                __vector_12
                0x00000126                __vector_55
                0x00000126                __vector_46
                0x00000126                __bad_interrupt
                0x00000126                __vector_31
                0x00000126                __vector_35
                0x00000126                __vector_39
                0x00000126                __vector_3
                0x00000126                __vector_23
                0x00000126                __vector_30
                0x00000126                __vector_45
                0x00000126                __vector_11
                0x00000126                __vector_54
                0x00000126                __vector_13
                0x00000126                __vector_17
                0x00000126                __vector_19
                0x00000126                __vector_56
                0x00000126                __vector_7
                0x00000126                __vector_49
                0x00000126                __vector_41
                0x00000126                __vector_43
                0x00000126                __vector_27
                0x00000126                __vector_33
                0x00000126                __vector_47
                0x00000126                __vector_52
                0x00000126                __vector_37
                0x00000126                __vector_4
                0x00000126                __vector_44
                0x00000126                __vector_51
                0x00000126                __vector_9
                0x00000126                __vector_2
                0x00000126                __vector_21
                0x00000126                __vector_15
                0x00000126                __vector_36
                0x00000126                __vector_29
                0x00000126                __vector_40
                0x00000126                __vector_8
                0x00000126                __vector_26
                0x00000126                __vector_48
                0x00000126                __vector_14
                0x00000126                __vector_53
                0x00000126                __vector_10
                0x00000126                __vector_50
                0x00000126                __vector_16
                0x00000126                __vector_18
                0x00000126                __vector_20
                0x00000126                __vector_42
 .text          0x0000012a      0x948 src/BOT_CODE/bot.o
                0x0000012a                lcd_set_4bit
                0x0000018e                lcd_wr_command
                0x000001d0                lcd_init
                0x000001f8                lcd_wr_char
                0x0000023a                lcd_home
                0x00000242                lcd_string
                0x0000025c                lcd_cursor
                0x00000294                lcd_print
                0x000003b4                lcd_port_config
                0x000003c2                left_position_encoder_interrupt_init
                0x000003d4                right_position_encoder_interrupt_init
                0x000003e6                __vector_5
                0x00000408                __vector_6
                0x0000042a                reset_shaft_counters
                0x00000434                adc_pin_config
                0x00000442                motion_pin_config
                0x00000464                port_init
                0x00000482                timer5_init
                0x000004b8                adc_init
                0x000004d2                ADC_Conversion
                0x0000050c                print_sensor
                0x00000534                velocity
                0x0000053e                motion_set
                0x0000054a                forward
                0x00000554                stop
                0x0000055c                init_devices
                0x00000582                print_sensor_data
                0x000005a2                read_sensors
                0x000005cc                buzzer_on
                0x000005d8                buzzer_off
                0x000005e4                turn_right
                0x0000062c                turn_left
                0x00000674                go_distance
                0x000006fc                go_upto_next_cross
                0x000008c6                USART_Init
                0x000008e6                __vector_25
                0x000009b0                init_devices_1
                0x000009ba                main
 .text          0x00000a72        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_udivmodhi4.o)
 .text          0x00000a72        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
 .text          0x00000a72        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
                0x00000a72                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000a72       0x28 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_udivmodhi4.o)
                0x00000a72                __udivmodhi4
 .text.libgcc   0x00000a9a        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000a9a        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
                0x00000a9a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000a9a        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
                0x00000a9a                exit
                0x00000a9a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000a9a        0x4 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x00000a9e                _etext = .

.data           0x00800200        0x4 load address 0x00000a9e
                0x00800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800200        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
 .data          0x00800200        0x3 src/BOT_CODE/bot.o
 .data          0x00800203        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_udivmodhi4.o)
 .data          0x00800203        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
 .data          0x00800203        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800204                . = ALIGN (0x2)
 *fill*         0x00800203        0x1 00
                0x00800204                _edata = .
                0x00800204                PROVIDE (__data_end, .)

.bss            0x00800204       0x18
                0x00800204                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800204        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
 .bss           0x00800204        0x9 src/BOT_CODE/bot.o
                0x00800204                flag
                0x00800205                Left_white_line
                0x00800206                Center_white_line
                0x00800207                Right_white_line
                0x00800208                Front_IR_Sensor
 .bss           0x0080020d        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_udivmodhi4.o)
 .bss           0x0080020d        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
 .bss           0x0080020d        0x0 /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080020d        0xf src/BOT_CODE/bot.o
                0x0080020d                million
                0x0080020f                temp
                0x00800211                ADC_Value
                0x00800212                i
                0x00800214                tens
                0x00800216                hundred
                0x00800218                unit
                0x0080021a                thousand
                0x0080021c                PROVIDE (__bss_end, .)
                0x00000a9e                __data_load_start = LOADADDR (.data)
                0x00000aa2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080021c        0x0
                0x0080021c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080021c                PROVIDE (__noinit_end, .)
                0x0080021c                _end = .
                0x0080021c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2ea4
 *(.stab)
 .stab          0x00000000      0x768 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000768     0x273c src/BOT_CODE/bot.o
                               0x2748 (size before relaxing)

.stabstr        0x00000000      0xdea
 *(.stabstr)
 .stabstr       0x00000000      0xdea /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(src/BOT_CODE/bot.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
ADC_Conversion                                    src/BOT_CODE/bot.o
ADC_Value                                         src/BOT_CODE/bot.o
Center_white_line                                 src/BOT_CODE/bot.o
Front_IR_Sensor                                   src/BOT_CODE/bot.o
Left_white_line                                   src/BOT_CODE/bot.o
Right_white_line                                  src/BOT_CODE/bot.o
USART_Init                                        src/BOT_CODE/bot.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__bss_end                                         /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__data_load_start                                 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__data_start                                      /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_clear_bss.o)
                                                  src/BOT_CODE/bot.o
__do_copy_data                                    /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
                                                  src/BOT_CODE/bot.o
__heap_end                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__init                                            /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__stack                                           /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_udivmodhi4.o)
                                                  src/BOT_CODE/bot.o
__vector_1                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_10                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_11                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_12                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_13                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_14                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_15                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_16                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_17                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_18                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_19                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_2                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_20                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_21                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_22                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_23                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_24                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_25                                       src/BOT_CODE/bot.o
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_26                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_27                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_28                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_29                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_3                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_30                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_31                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_32                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_33                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_34                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_35                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_36                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_37                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_38                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_39                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_4                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_40                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_41                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_42                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_43                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_44                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_45                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_46                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_47                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_48                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_49                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_5                                        src/BOT_CODE/bot.o
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_50                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_51                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_52                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_53                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_54                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_55                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_56                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_6                                        src/BOT_CODE/bot.o
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_7                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_8                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_9                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vector_default                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
__vectors                                         /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
_exit                                             /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
adc_init                                          src/BOT_CODE/bot.o
adc_pin_config                                    src/BOT_CODE/bot.o
buzzer_off                                        src/BOT_CODE/bot.o
buzzer_on                                         src/BOT_CODE/bot.o
exit                                              /usr/lib/gcc/avr/4.3.5/avr6/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
flag                                              src/BOT_CODE/bot.o
forward                                           src/BOT_CODE/bot.o
go_distance                                       src/BOT_CODE/bot.o
go_upto_next_cross                                src/BOT_CODE/bot.o
hundred                                           src/BOT_CODE/bot.o
i                                                 src/BOT_CODE/bot.o
init_devices                                      src/BOT_CODE/bot.o
init_devices_1                                    src/BOT_CODE/bot.o
lcd_cursor                                        src/BOT_CODE/bot.o
lcd_home                                          src/BOT_CODE/bot.o
lcd_init                                          src/BOT_CODE/bot.o
lcd_port_config                                   src/BOT_CODE/bot.o
lcd_print                                         src/BOT_CODE/bot.o
lcd_set_4bit                                      src/BOT_CODE/bot.o
lcd_string                                        src/BOT_CODE/bot.o
lcd_wr_char                                       src/BOT_CODE/bot.o
lcd_wr_command                                    src/BOT_CODE/bot.o
left_position_encoder_interrupt_init              src/BOT_CODE/bot.o
main                                              src/BOT_CODE/bot.o
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr6/crtm2560.o
million                                           src/BOT_CODE/bot.o
motion_pin_config                                 src/BOT_CODE/bot.o
motion_set                                        src/BOT_CODE/bot.o
port_init                                         src/BOT_CODE/bot.o
print_sensor                                      src/BOT_CODE/bot.o
print_sensor_data                                 src/BOT_CODE/bot.o
read_sensors                                      src/BOT_CODE/bot.o
reset_shaft_counters                              src/BOT_CODE/bot.o
right_position_encoder_interrupt_init             src/BOT_CODE/bot.o
stop                                              src/BOT_CODE/bot.o
temp                                              src/BOT_CODE/bot.o
tens                                              src/BOT_CODE/bot.o
thousand                                          src/BOT_CODE/bot.o
timer5_init                                       src/BOT_CODE/bot.o
turn_left                                         src/BOT_CODE/bot.o
turn_right                                        src/BOT_CODE/bot.o
unit                                              src/BOT_CODE/bot.o
velocity                                          src/BOT_CODE/bot.o
